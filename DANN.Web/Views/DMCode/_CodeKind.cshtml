@{
    var grid = Html.DevExpress().GridView<DANN.Model.DM_CodeKind>(settings =>
    {
        settings.Name = "CodeKindGridView";
        settings.CallbackRouteValues = new { Controller = "DMCode", Action = "Load" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "DMCode", Action = "AddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "DMCode", Action = "Update" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "DMCode", Action = "Delete" };



        //Settings
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsBehavior.ConfirmDelete = true;

        //settings.SettingsPager.PageSizeItemSettings.Visible = true;
        //settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "15", "25", "50" };
        //settings.SettingsPager.Visible = true;

        // settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        //settings.Settings.ShowTitlePanel = true;
        //settings.Settings.ShowGroupPanel = true;
        //settings.Settings.ShowFilterRow = true;
        //settings.SettingsSearchPanel.Visible = true;
        settings.SettingsBehavior.AllowDragDrop = false;
        settings.SettingsBehavior.AutoExpandAllGroups = true;

        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.KeyboardSupport = true;

         
        /*Events*/
        settings.ClientSideEvents.EndCallback = "GridEndCallbackFocusToAddNew";
        settings.ClientSideEvents.RowDblClick = "GridDoubleClickToEdit";
        settings.ClientSideEvents.FocusedRowChanged = "function(s,e) { GridFocusedChangedToSave1(s,e); GridFocusedChangedReloadControl1(s,e); }";
        settings.ClientSideEvents.ContextMenu = "ShowGridContextMenu1";
        settings.ClientSideEvents.RowClick = "function (s, e){ currentControlType = 'Grid'; currentControl = CodeKindGridView ; }";


        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["CodeKind_Id"] = Convert.ToInt32(ViewBag.MaxId) + 1; 

        };

        settings.KeyFieldName = "CodeKind_Id";

        settings.Columns.Add(c => c.CodeKindName,
                            column =>
                            { 
                                column.Width = Unit.Percentage(80);
                            });
        settings.Columns.Add(c => c.CodeKind_Id,
                            column =>
                            { 
                                column.Width = Unit.Percentage(20); 
                            }); 
       
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()