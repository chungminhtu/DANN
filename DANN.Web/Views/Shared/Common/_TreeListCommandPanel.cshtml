@model DANN.Web.Models.CommandPanelOptions
  
@Html.Partial("_FunctionTemplate", Model)

@Html.DevExpress().Panel(panelButton =>
        {
            panelButton.Name = "TreeCommandPanel" + @Model.controlIndex;
            panelButton.FixedPosition = PanelFixedPosition.None;
            panelButton.SettingsCollapsing.ExpandEffect = PanelExpandEffect.Auto;

            panelButton.SetContent(() =>
            {
                Html.DevExpress().Button(
                    myButton =>
                    {
                        myButton.Name = "treebtnThemMoi" + @Model.controlIndex;
                        myButton.Text = "Thêm";
                        myButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                        myButton.Images.Image.Url = "~/Content/icon/16/Add_16x16.png";
                        myButton.ClientSideEvents.Click = "function() { " + @Model.controlName + ".StartEditNewNode(); }";
                        myButton.ClientVisible = @Model.Add;
                        myButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                    }).GetHtml();
                Html.DevExpress().Button(
                        myButton =>
                        {
                            myButton.Name = "treebtnSua" + @Model.controlIndex;
                            myButton.Text = "Sửa (Enter)";
                            myButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                            myButton.Images.Image.Url = "~/Content/icon/16/Edit_16x16.png";
                            myButton.ClientSideEvents.Click = "function( ) { " + @Model.controlName + ".StartEdit(" + @Model.controlName + ".GetFocusedNodeKey()); }";
                            myButton.ClientVisible = @Model.Edit;
                            myButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        }).GetHtml();
                Html.DevExpress().Button(
                        myButton =>
                        {
                            myButton.Name = "treebtnXoa" + @Model.controlIndex;
                            myButton.Text = "Xóa (Delete)";
                            myButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                            myButton.Images.Image.Url = "~/Content/icon/16/Close_16x16.png";
                            myButton.ClientSideEvents.Click = "function( ) {  bootbox.confirm('Bạn có chắc chắn xóa dữ liệu này không?', "
                                + "function(result) { if(result == true) { " + @Model.controlName + ".DeleteNode(" + @Model.controlName + ".GetFocusedNodeKey()); }" + "}); }";
                            
                            myButton.ClientVisible = @Model.Delete;
                            myButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        }).GetHtml();
                Html.DevExpress().Button(
                        myButton =>
                        {
                            myButton.Name = "treebtnLuu" + @Model.controlIndex;
                            myButton.Text = "Lưu (Enter)";
                            myButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                            myButton.Images.Image.Url = "~/Content/icon/16/SaveAll_16x16.png";
                            myButton.ClientSideEvents.Click = "function( ) { " + @Model.controlName + ".UpdateEdit(); }";
                            myButton.ClientVisible = @Model.Save;
                            myButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        }).GetHtml();
                Html.DevExpress().Button(
                        myButton =>
                        {
                            myButton.Name = "treebtnHuy" + @Model.controlIndex;
                            myButton.Text = "Hủy (ESC)";
                            myButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                            myButton.Images.Image.Url = "~/Content/icon/16/Reset2_16x16.png";
                            myButton.ClientSideEvents.Click = "function( ) { " + @Model.controlName + ".CancelEdit();  }";
                            myButton.ClientVisible = @Model.Cancel;
                            myButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        }).GetHtml();
                Html.DevExpress().Button(
                        myButton =>
                        {
                            myButton.Name = "treebtnRefresh" + @Model.controlIndex;
                            myButton.Text = "Xem thay đổi (F5)";
                            myButton.Images.Image.Url = "~/Content/icon/16/DocumentMap_16x16.png";
                            myButton.ClientSideEvents.Click = "function( ) { location.reload();  }";
                            myButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                            myButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                            myButton.ClientVisible = @Model.Reload;
                        }).GetHtml();
            });
        }).GetHtml()

@Html.DevExpress().PopupMenu(settings =>
{
    settings.Name = "TreePopupMenu" + @Model.controlIndex;
    settings.AllowSelectItem = false;
    settings.Items.Add("Mở rộng nút này", "Expand", "~/Content/icon/16/Merge_16x16.png");
    settings.Items.Add("Mở rộng toàn bộ", "ExpandAll", "~/Content/icon/16/Group2_16x16.png");
    settings.Items.Add("Thu gọn toàn bộ", "CollapseAll", "~/Content/icon/16/Group_16x16.png");
    settings.Items.Add("Thêm - Nút gốc", "NewRoot", "~/Content/icon/16/Add_16x16.png").BeginGroup = true;
    settings.Items.Add("Thêm - Nút ngang hàng", "NewSibling", "~/Content/icon/16/Insert_16x16.png");
    settings.Items.Add("Thêm - Nút con", "NewChild", "~/Content/icon/16/Add_16x16.png");
    settings.Items.Add("Sửa nút", "Edit", "~/Content/icon/16/EditName_16x16.png").BeginGroup = true;
    settings.Items.Add("Xóa nút", "Delete", "~/Content/icon/16/Cut_16x16.png");
    settings.ClientSideEvents.ItemClick = "OnTreeMenuItemClick";
}).GetHtml()