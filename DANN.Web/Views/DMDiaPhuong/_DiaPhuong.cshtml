@{
    var treeList = Html.DevExpress().TreeList<DANN.Model.DM_DiaPhuong>(settings =>
    {
        settings.Name = "DiaPhuongTreeList";
        settings.CallbackRouteValues = new { Controller = "DMDiaPhuong", Action = "Load" };

        settings.SettingsEditing.AddNewNodeRouteValues = new { Controller = "DMDiaPhuong", Action = "AddNew" };
        settings.SettingsEditing.UpdateNodeRouteValues = new { Controller = "DMDiaPhuong", Action = "Update" };
        settings.SettingsEditing.DeleteNodeRouteValues = new { Controller = "DMDiaPhuong", Action = "Delete" };
        //settings.SettingsEditing.NodeDragDropRouteValues = new { Controller = "DMDiaPhuong", Action = "Move" };


        /*Settings*/
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "15", "25", "50" };
        settings.SettingsPager.PageSize = 25;

        settings.CommandColumn.Visible = false;

        settings.SettingsSelection.Enabled = false;
        settings.SettingsSelection.AllowSelectAll = false;
        settings.SettingsSelection.Recursive = true;

        settings.SettingsBehavior.AllowSort = false;
        settings.SettingsBehavior.AllowFocusedNode = true;
        settings.SettingsBehavior.AllowDragDrop = false;
        settings.SettingsBehavior.FocusNodeOnLoad = false;
        settings.SettingsBehavior.AutoExpandAllNodes = false;
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;

        settings.Styles.AlternatingNode.Enabled = DevExpress.Utils.DefaultBoolean.True;
        settings.KeyboardSupport = true;

        /*Events*/ 
        
        settings.ClientSideEvents.NodeDblClick = "NodeDoubleClickToEdit";
        settings.ClientSideEvents.FocusedNodeChanged = "NodeFocusedChangedToSave";
        settings.ClientSideEvents.ContextMenu = "ShowTreeContextMenu";
        settings.ClientSideEvents.NodeClick = "function (s, e){ currentControlType = 'Tree';currentControl = DiaPhuongTreeList ; }";

        /*Hiển thị thông báo sau từ server sau khi Callback*/
        settings.ClientSideEvents.EndCallback = "function (s, e) { TreeEndCallbackFocusToAddNew(s,e); EndCallbackShowMessage(s,e); }";
        settings.CustomJSProperties = (s, e) =>
        {
            if (ViewData["Success"] != null)
            {
                e.Properties["cpMessage"] = ViewData["Success"] + "";
            }
        };
        /*--------------------------------------------------*/
        
        /*Fields*/
        settings.KeyFieldName = "DiaPhuong_Id";
        settings.ParentFieldName = "DiaPhuong_ParentId";
        settings.Columns.Add(c => c.TenDiaPhuong,
                            column =>
                            {
                                column.Width = Unit.Percentage(20);
                            });
        settings.Columns.Add(c => c.IDBanDo,
                            column =>
                            {
                                column.Width = Unit.Percentage(40);
                            });
        settings.Columns.Add(c => c.Loai,
                            column =>
                            {
                                column.Width = Unit.Percentage(20);
                                column.ColumnType = MVCxTreeListColumnType.ComboBox;

                                var properties = column.PropertiesEdit as ComboBoxProperties;
                                properties.Items.Add("Nước", "N");
                                properties.Items.Add("Vùng, Khu vực", "V");
                                properties.Items.Add("Tỉnh, Thành phố", "P");
                                properties.Items.Add("Quận, Huyện", "D");
                                properties.Items.Add("Xã, Phường, Thị Trấn", "W");
                            });
        settings.Columns.Add(c => c.Longitude,
                            column =>
                            {
                                column.Width = Unit.Percentage(10);
                            });
        settings.Columns.Add(c => c.Latitude,
                            column =>
                            {
                                column.Width = Unit.Percentage(10);
                            });
        settings.Columns.Add(c => c.TelCode,
                            column =>
                            {
                                column.SortIndex = 0;
                                column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
                                column.Width = Unit.Percentage(10);
                            });
    });
    if (ViewData["EditError"] != null)
    {
        treeList.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@treeList.Bind(Model).GetHtml()