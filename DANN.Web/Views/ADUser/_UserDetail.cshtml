@model DANN.Model.AD_User

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "UserFormLayout";
    settings.Width = Unit.Percentage(100);
    settings.ColCount = 2;
    var groupItem = settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Thông tin chi tiết";
        groupSettings.ShowCaption = DefaultBoolean.True;
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
        //groupSettings.CellStyle.Paddings.Padding = Unit.Pixel(0);

    });

    groupItem.SettingsItems.ShowCaption = DefaultBoolean.True;
    //groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
    //groupItem.ParentContainerStyle.Paddings.Padding = Unit.Pixel(0);

    groupItem.ColCount = 2;
    groupItem.ColSpan = 2;

    groupItem.Items.Add(c => c.User_Id, m =>
    {
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.User_Id, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.ReadOnly = Convert.ToBoolean(Session["CanEditUserId"]);
                mySettings.ControlStyle.BackColor = Convert.ToBoolean(Session["CanEditUserId"]) ? System.Drawing.Color.LightGray : System.Drawing.Color.White;
                mySettings.ShowModelErrors = true;
            }).Render();
        });
    });
    groupItem.Items.Add(c => c.Password, m =>
    {
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Password, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.ShowModelErrors = true;
            }).Render();

        });
    });
    groupItem.Items.Add(c => c.UserName, m =>
    {
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.UserName, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.ShowModelErrors = true;
            }).Render();
        });
    });
    groupItem.Items.Add(c => c.Email, m =>
    {
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Email, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.ShowModelErrors = true;
            }).Render();
        });
    });
    groupItem.Items.Add(c => c.DiaChi, m =>
    {
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.DiaChi, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.ShowModelErrors = true;
            }).Render();
        });
    });
    groupItem.Items.Add(c => c.SoDienThoai, m =>
    {
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.SoDienThoai, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.ShowModelErrors = true;
            }).Render();
        });
    });

    groupItem.Items.Add(a => a.ChucVu, m =>
    {
        m.ColSpan = 1;
        m.Width = Unit.Percentage(50);
        m.SetNestedContent(() =>
        {
            ViewContext.Writer.Write("<div id='DivComboChucVu'>");
            Html.RenderAction("LoadComboChucVu", "DMCode", new DANN.Model.ComboboxModel { Name = "ChucVu" , Object = Model });
            ViewContext.Writer.Write("</div>");
            ViewContext.Writer.Write(" <div style='padding-top:2px;'>");
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnEditChucVu";
                btnSettings.Width = Unit.Percentage(100);
                btnSettings.Text = "Sửa danh sách chức vụ";
                btnSettings.Images.Image.Url = "~/Content/icon/16/RecentlyUse_16x16.png";
                btnSettings.ClientSideEvents.Click = "function(s, e){ popupEditChucVu.Show(); }";
            }).Render();
            ViewContext.Writer.Write("</div>");
        });
    });

    groupItem.Items.Add(a => a.PhanHe, m =>
    {
        m.ColSpan = 1;
        m.Width = Unit.Percentage(50);
        m.SetNestedContent(() =>
        {
            ViewContext.Writer.Write("<div id='DivComboPhanHe'>");
            Html.RenderAction("LoadComboPhanHe", "DMPhanHe", new DANN.Model.ComboboxModel { Name = "PhanHe", Object = Model });
            ViewContext.Writer.Write("</div>");
            ViewContext.Writer.Write("<div style='padding-top:2px;'>");
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnEditPhanHe";
                btnSettings.Width = Unit.Percentage(100);
                btnSettings.Text = "Sửa danh sách đơn vị (phòng ban)";
                btnSettings.Images.Image.Url = "~/Content/icon/16/DocumentMap_16x16.png";
                btnSettings.ClientSideEvents.Click = "function(s, e){ popupEditPhanHe.Show(); }";
            }).Render();
            ViewContext.Writer.Write("</div>");

        });
    });

}).GetHtml()

